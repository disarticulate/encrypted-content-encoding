{"version":3,"sources":["../src/ece.js"],"names":["AES_GCM","PAD_SIZE","TAG_LENGTH","KEY_LENGTH","NONCE_LENGTH","SHA_256_LENGTH","MODE_ENCRYPT","MODE_DECRYPT","keylog","process","env","ECE_KEYLOG","m","k","console","warn","length","base64","encode","decode","b","HMAC_hash","key","input","hmac","crypto","createHmac","update","digest","HKDF_extract","salt","ikm","HKDF_expand","prk","info","l","output","Buffer","alloc","T","from","counter","cbuf","writeUIntBE","concat","slice","HKDF","len","base","context","result","lengthPrefix","buffer","extractDH","header","mode","privateKey","senderPubKey","receiverPubKey","getPublicKey","dh","Error","secret","computeSecret","keylabel","extractSecretAndContext","keyid","undefined","keymap","authSecret","webpushSecret","remotePubKey","extractSecret","keyLookupCallback","isFunction","deriveKeyAndNonce","lookupKeyCallback","version","keyInfo","nonceInfo","s","nonce","parseParams","params","rs","parseInt","isNaN","overhead","generateNonce","readUIntBE","x","readHeader","idsz","unpadLegacy","data","padSize","pad","padCheck","fill","compare","unpad","last","i","decryptRecord","gcm","createDecipheriv","setAuthTag","decrypt","headerLength","start","chunkSize","end","Math","min","block","encryptRecord","createCipheriv","ciphertext","padding","push","tag","getAuthTag","writeHeader","ints","encrypt","isBuffer","randomBytes","recordPad","object","module","exports"],"mappings":"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","sourcesContent":["/*\n'use strict';\n * Encrypted content coding\n *\n * === Note about versions ===\n *\n * This code supports multiple versions of the draft.  This is selected using\n * the |version| parameter.\n *\n * aes128gcm: The most recent version, the salt, record size and key identifier\n *    are included in a header that is part of the encrypted content coding.\n *\n * aesgcm: The version that is widely deployed with WebPush (as of 2016-11).\n *    This version is selected by default, unless you specify a |padSize| of 1.\n */\n\nimport crypto from 'crypto-browserify'\nimport base64 from 'urlsafe-base64'\n\nvar AES_GCM = 'aes-128-gcm';\nvar PAD_SIZE = { 'aes128gcm': 1, 'aesgcm': 2 };\nvar TAG_LENGTH = 16;\nvar KEY_LENGTH = 16;\nvar NONCE_LENGTH = 12;\nvar SHA_256_LENGTH = 32;\nvar MODE_ENCRYPT = 'encrypt';\nvar MODE_DECRYPT = 'decrypt';\n\nvar keylog;\nif (process.env.ECE_KEYLOG === '1') {\n  keylog = function(m, k) {\n    console.warn(m + ' [' + k.length + ']: ' + base64.encode(k));\n    return k;\n  };\n} else {\n  keylog = function(m, k) { return k; };\n}\n\n/* Optionally base64 decode something. */\nfunction decode(b) {\n  if (typeof b === 'string') {\n    return base64.decode(b);\n  }\n  return b;\n}\n\nfunction HMAC_hash(key, input) {\n  var hmac = crypto.createHmac('sha256', key);\n  hmac.update(input);\n  return hmac.digest();\n}\n\n/* HKDF as defined in RFC5869, using SHA-256 */\nfunction HKDF_extract(salt, ikm) {\n  keylog('salt', salt);\n  keylog('ikm', ikm);\n  return keylog('extract', HMAC_hash(salt, ikm));\n}\n\nfunction HKDF_expand(prk, info, l) {\n  keylog('prk', prk);\n  keylog('info', info);\n  var output = Buffer.alloc(0);\n  var T = Buffer.alloc(0);\n  info = Buffer.from(info, 'ascii');\n  var counter = 0;\n  var cbuf = Buffer.alloc(1);\n  while (output.length < l) {\n    cbuf.writeUIntBE(++counter, 0, 1);\n    T = HMAC_hash(prk, Buffer.concat([T, info, cbuf]));\n    output = Buffer.concat([output, T]);\n  }\n\n  return keylog('expand', output.slice(0, l));\n}\n\nfunction HKDF(salt, ikm, info, len) {\n  return HKDF_expand(HKDF_extract(salt, ikm), info, len);\n}\n\nfunction info(base, context) {\n  var result = Buffer.concat([\n    Buffer.from('Content-Encoding: ' + base + '\\0', 'ascii'),\n    context\n  ]);\n  keylog('info ' + base, result);\n  return result;\n}\n\nfunction lengthPrefix(buffer) {\n  var b = Buffer.concat([Buffer.alloc(2), buffer]);\n  b.writeUIntBE(buffer.length, 0, 2);\n  return b;\n}\n\nfunction extractDH(header, mode) {\n  var key = header.privateKey;\n  var senderPubKey, receiverPubKey;\n  if (mode === MODE_ENCRYPT) {\n    senderPubKey = key.getPublicKey();\n    receiverPubKey = header.dh;\n  } else if (mode === MODE_DECRYPT) {\n    senderPubKey = header.dh;\n    receiverPubKey = key.getPublicKey();\n  } else {\n    throw new Error('Unknown mode only ' + MODE_ENCRYPT +\n                    ' and ' + MODE_DECRYPT + ' supported');\n  }\n  return {\n    secret: key.computeSecret(header.dh),\n    context: Buffer.concat([\n      Buffer.from(header.keylabel, 'ascii'),\n      Buffer.from([0]),\n      lengthPrefix(receiverPubKey), // user agent\n      lengthPrefix(senderPubKey)    // application server\n    ])\n  };\n}\n\nfunction extractSecretAndContext(header, mode) {\n  var result = { secret: null, context: Buffer.alloc(0) };\n  if (header.key) {\n    result.secret = header.key;\n    if (result.secret.length !== KEY_LENGTH) {\n      throw new Error('An explicit key must be ' + KEY_LENGTH + ' bytes');\n    }\n  } else if (header.dh) { // receiver/decrypt\n    result = extractDH(header, mode);\n  } else if (typeof header.keyid !== undefined) {\n    result.secret = header.keymap[header.keyid];\n  }\n  if (!result.secret) {\n    throw new Error('Unable to determine key');\n  }\n  keylog('secret', result.secret);\n  keylog('context', result.context);\n  if (header.authSecret) {\n    result.secret = HKDF(header.authSecret, result.secret,\n                         info('auth', Buffer.alloc(0)), SHA_256_LENGTH);\n    keylog('authsecret', result.secret);\n  }\n  return result;\n}\n\nfunction webpushSecret(header, mode) {\n  if (!header.authSecret) {\n    throw new Error('No authentication secret for webpush');\n  }\n  keylog('authsecret', header.authSecret);\n\n  var remotePubKey, senderPubKey, receiverPubKey;\n  if (mode === MODE_ENCRYPT) {\n    senderPubKey = header.privateKey.getPublicKey();\n    remotePubKey = receiverPubKey = header.dh;\n  } else if (mode === MODE_DECRYPT) {\n    remotePubKey = senderPubKey = header.keyid;\n    receiverPubKey = header.privateKey.getPublicKey();\n  } else {\n    throw new Error('Unknown mode only ' + MODE_ENCRYPT +\n                    ' and ' + MODE_DECRYPT + ' supported');\n  }\n  keylog('remote pubkey', remotePubKey);\n  keylog('sender pubkey', senderPubKey);\n  keylog('receiver pubkey', receiverPubKey);\n  return keylog('secret dh',\n                HKDF(header.authSecret,\n                     header.privateKey.computeSecret(remotePubKey),\n                     Buffer.concat([\n                       Buffer.from('WebPush: info\\0'),\n                       receiverPubKey,\n                       senderPubKey\n                     ]),\n                     SHA_256_LENGTH));\n}\n\nfunction extractSecret(header, mode, keyLookupCallback) {\n  if (keyLookupCallback) {\n    if (!isFunction(keyLookupCallback)) {\n      throw new Error('Callback is not a function')\n    }\n  }\n\n  if (header.key) {\n    if (header.key.length !== KEY_LENGTH) {\n      throw new Error('An explicit key must be ' + KEY_LENGTH + ' bytes');\n    }\n    return keylog('secret key', header.key);\n  }\n\n  if (!header.privateKey) {\n    // Lookup based on keyid\n    if (!keyLookupCallback) {\n      var key = header.keymap && header.keymap[header.keyid];\n    } else {\n      var key = keyLookupCallback(header.keyid)\n    }\n    if (!key) {\n      throw new Error('No saved key (keyid: \"' + header.keyid + '\")');\n    }\n    return key;\n  }\n\n  return webpushSecret(header, mode);\n}\n\nfunction deriveKeyAndNonce(header, mode, lookupKeyCallback) {\n  if (!header.salt) {\n    throw new Error('must include a salt parameter for ' + header.version);\n  }\n  var keyInfo;\n  var nonceInfo;\n  var secret;\n  if (header.version === 'aesgcm') {\n    // old\n    var s = extractSecretAndContext(header, mode, lookupKeyCallback);\n    keyInfo = info('aesgcm', s.context);\n    nonceInfo = info('nonce', s.context);\n    secret = s.secret;\n  } else if (header.version === 'aes128gcm') {\n    // latest\n    keyInfo = Buffer.from('Content-Encoding: aes128gcm\\0');\n    nonceInfo = Buffer.from('Content-Encoding: nonce\\0');\n    secret = extractSecret(header, mode, lookupKeyCallback);\n  } else {\n    throw new Error('Unable to set context for mode ' + header.version);\n  }\n  var prk = HKDF_extract(header.salt, secret);\n  var result = {\n    key: HKDF_expand(prk, keyInfo, KEY_LENGTH),\n    nonce: HKDF_expand(prk, nonceInfo, NONCE_LENGTH)\n  };\n  keylog('key', result.key);\n  keylog('nonce base', result.nonce);\n  return result;\n}\n\n/* Parse command-line arguments. */\nfunction parseParams(params) {\n  var header = {};\n\n  header.version = params.version || 'aes128gcm';\n  header.rs = parseInt(params.rs, 10);\n  if (isNaN(header.rs)) {\n    header.rs = 4096;\n  }\n  var overhead = PAD_SIZE[header.version];\n  if (header.version === 'aes128gcm') {\n    overhead += TAG_LENGTH;\n  }\n  if (header.rs <= overhead) {\n    throw new Error('The rs parameter has to be greater than ' + overhead);\n  }\n\n  if (params.salt) {\n    header.salt = decode(params.salt);\n    if (header.salt.length !== KEY_LENGTH) {\n      throw new Error('The salt parameter must be ' + KEY_LENGTH + ' bytes');\n    }\n  }\n  header.keyid = params.keyid;\n  if (params.key) {\n    header.key = decode(params.key);\n  } else {\n    header.privateKey = params.privateKey;\n    if (!header.privateKey) {\n      header.keymap = params.keymap;\n    }\n    if (header.version !== 'aes128gcm') {\n      header.keylabel = params.keylabel || 'P-256';\n    }\n    if (params.dh) {\n      header.dh = decode(params.dh);\n    }\n  }\n  if (params.authSecret) {\n    header.authSecret = decode(params.authSecret);\n  }\n  return header;\n}\n\nfunction generateNonce(base, counter) {\n  var nonce = Buffer.from(base);\n  var m = nonce.readUIntBE(nonce.length - 6, 6);\n  var x = ((m ^ counter) & 0xffffff) +\n      ((((m / 0x1000000) ^ (counter / 0x1000000)) & 0xffffff) * 0x1000000);\n  nonce.writeUIntBE(x, nonce.length - 6, 6);\n  keylog('nonce' + counter, nonce);\n  return nonce;\n}\n\n/* Used when decrypting aes128gcm to populate the header values. Modifies the\n * header values in place and returns the size of the header. */\nfunction readHeader(buffer, header) {\n  var idsz = buffer.readUIntBE(20, 1);\n  header.salt = buffer.slice(0, KEY_LENGTH);\n  header.rs = buffer.readUIntBE(KEY_LENGTH, 4);\n  header.keyid = buffer.slice(21, 21 + idsz);\n  return 21 + idsz;\n}\n\nfunction unpadLegacy(data, version) {\n  var padSize = PAD_SIZE[version];\n  var pad = data.readUIntBE(0, padSize);\n  if (pad + padSize > data.length) {\n    throw new Error('padding exceeds block size');\n  }\n  keylog('padding', data.slice(0, padSize + pad));\n  var padCheck = Buffer.alloc(pad);\n  padCheck.fill(0);\n  if (padCheck.compare(data.slice(padSize, padSize + pad)) !== 0) {\n    throw new Error('invalid padding');\n  }\n  return data.slice(padSize + pad);\n}\n\nfunction unpad(data, last) {\n  var i = data.length - 1;\n  while(i >= 0) {\n    if (data[i]) {\n      if (last) {\n        if (data[i] !== 2) {\n          throw new Error('last record needs to start padding with a 2');\n        }\n      } else {\n        if (data[i] !== 1) {\n          throw new Error('last record needs to start padding with a 2');\n        }\n      }\n      return data.slice(0, i);\n    }\n    --i;\n  }\n  throw new Error('all zero plaintext');\n}\n\nfunction decryptRecord(key, counter, buffer, header, last) {\n  keylog('decrypt', buffer);\n  var nonce = generateNonce(key.nonce, counter);\n  var gcm = crypto.createDecipheriv(AES_GCM, key.key, nonce);\n  gcm.setAuthTag(buffer.slice(buffer.length - TAG_LENGTH));\n  var data = gcm.update(buffer.slice(0, buffer.length - TAG_LENGTH));\n  data = Buffer.concat([data, gcm.final()]);\n  keylog('decrypted', data);\n  if (header.version !== 'aes128gcm') {\n    return unpadLegacy(data, header.version);\n  }\n  return unpad(data, last);\n}\n\n/**\n * Decrypt some bytes.  This uses the parameters to determine the key and block\n * size, which are described in the draft.  Binary values are base64url encoded.\n *\n * |params.version| contains the version of encoding to use: aes128gcm is the latest,\n * but aesgcm is also accepted (though the latter might\n * disappear in a future release).  If omitted, assume aes128gcm.\n *\n * If |params.key| is specified, that value is used as the key.\n *\n * If the version is aes128gcm, the keyid is extracted from the header and used\n * as the ECDH public key of the sender.  For version aesgcm ,\n * |params.dh| needs to be provided with the public key of the sender.\n *\n * The |params.privateKey| includes the private key of the receiver.\n */\nfunction decrypt(buffer, params, keyLookupCallback) {\n  var header = parseParams(params);\n  if (header.version === 'aes128gcm') {\n    var headerLength = readHeader(buffer, header);\n    buffer = buffer.slice(headerLength);\n  }\n  var key = deriveKeyAndNonce(header, MODE_DECRYPT, keyLookupCallback);\n  var start = 0;\n  var result = Buffer.alloc(0);\n\n  var chunkSize = header.rs;\n  if (header.version !== 'aes128gcm') {\n    chunkSize += TAG_LENGTH;\n  }\n\n  for (var i = 0; start < buffer.length; ++i) {\n    var end = start + chunkSize;\n    if (header.version !== 'aes128gcm' && end === buffer.length) {\n      throw new Error('Truncated payload');\n    }\n    end = Math.min(end, buffer.length);\n    if (end - start <= TAG_LENGTH) {\n      throw new Error('Invalid block: too small at ' + i);\n    }\n    var block = decryptRecord(key, i, buffer.slice(start, end),\n                              header, end >= buffer.length);\n    result = Buffer.concat([result, block]);\n    start = end;\n  }\n  return result;\n}\n\nfunction encryptRecord(key, counter, buffer, pad, header, last) {\n  keylog('encrypt', buffer);\n  pad = pad || 0;\n  var nonce = generateNonce(key.nonce, counter);\n  var gcm = crypto.createCipheriv(AES_GCM, key.key, nonce);\n\n  var ciphertext = [];\n  var padSize = PAD_SIZE[header.version];\n  var padding = Buffer.alloc(pad + padSize);\n  padding.fill(0);\n\n  if (header.version !== 'aes128gcm') {\n    padding.writeUIntBE(pad, 0, padSize);\n    keylog('padding', padding);\n    ciphertext.push(gcm.update(padding));\n    ciphertext.push(gcm.update(buffer));\n\n    if (!last && padding.length + buffer.length < header.rs) {\n      throw new Error('Unable to pad to record size');\n    }\n  } else {\n    ciphertext.push(gcm.update(buffer));\n    padding.writeUIntBE(last ? 2 : 1, 0, 1);\n    keylog('padding', padding);\n    ciphertext.push(gcm.update(padding));\n  }\n\n  gcm.final();\n  var tag = gcm.getAuthTag();\n  if (tag.length !== TAG_LENGTH) {\n    throw new Error('invalid tag generated');\n  }\n  ciphertext.push(tag);\n  return keylog('encrypted', Buffer.concat(ciphertext));\n}\n\nfunction writeHeader(header) {\n  var ints = Buffer.alloc(5);\n  var keyid = Buffer.from(header.keyid || []);\n  if (keyid.length > 255) {\n    throw new Error('keyid is too large');\n  }\n  ints.writeUIntBE(header.rs, 0, 4);\n  ints.writeUIntBE(keyid.length, 4, 1);\n  return Buffer.concat([header.salt, ints, keyid]);\n}\n\n/**\n * Encrypt some bytes.  This uses the parameters to determine the key and block\n * size, which are described in the draft.\n *\n * |params.version| contains the version of encoding to use: aes128gcm is the latest,\n * but aesgcm is also accepted (though the latter two might\n * disappear in a future release).  If omitted, assume aes128gcm.\n *\n * If |params.key| is specified, that value is used as the key.\n *\n * For Diffie-Hellman (WebPush), |params.dh| includes the public key of the\n * receiver.  |params.privateKey| is used to establish a shared secret.  Key\n * pairs can be created using |crypto.createECDH()|.\n */\nfunction encrypt(buffer, params, keyLookupCallback) {  \n  if (!Buffer.isBuffer(buffer)) {\n    throw new Error('buffer argument must be a Buffer');\n  }\n  var header = parseParams(params);\n  if (!header.salt) {\n    header.salt = crypto.randomBytes(KEY_LENGTH);\n  }\n\n  var result;\n  if (header.version === 'aes128gcm') {\n    // Save the DH public key in the header unless keyid is set.\n    if (header.privateKey && !header.keyid) {\n      header.keyid = header.privateKey.getPublicKey();\n    }\n    result = writeHeader(header);\n  } else {\n    // No header on other versions\n    result = Buffer.alloc(0);\n  }\n\n  var key = deriveKeyAndNonce(header, MODE_ENCRYPT, keyLookupCallback);\n  var start = 0;\n  var padSize = PAD_SIZE[header.version];\n  var overhead = padSize;\n  if (header.version === 'aes128gcm') {\n    overhead += TAG_LENGTH;\n  }\n  var pad = isNaN(parseInt(params.pad, 10)) ? 0 : parseInt(params.pad, 10);\n\n  var counter = 0;\n  var last = false;\n  while (!last) {\n    // Pad so that at least one data byte is in a block.\n    var recordPad = Math.min(header.rs - overhead - 1, pad);\n    if (header.version !== 'aes128gcm') {\n      recordPad = Math.min((1 << (padSize * 8)) - 1, recordPad);\n    }\n    if (pad > 0 && recordPad === 0) {\n      ++recordPad; // Deal with perverse case of rs=overhead+1 with padding.\n    }\n    pad -= recordPad;\n\n    var end = start + header.rs - overhead - recordPad;\n    if (header.version !== 'aes128gcm') {\n      // The > here ensures that we write out a padding-only block at the end\n      // of a buffer.\n      last = end > buffer.length;\n    } else {\n      last = end >= buffer.length;\n    }\n    last = last && pad <= 0;\n    var block = encryptRecord(key, counter, buffer.slice(start, end),\n                              recordPad, header, last);\n    result = Buffer.concat([result, block]);\n\n    start = end;\n    ++counter;\n  }\n  return result;\n}\n\n\nfunction isFunction(object) {\n  return typeof(object) === 'function';\n }\n\nmodule.exports = {\n  decrypt: decrypt,\n  encrypt: encrypt\n};\n"],"file":"ece.js"}